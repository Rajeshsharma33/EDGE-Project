{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNZEqJ6h3yr4PXRbgbYdL4P",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Rajeshsharma33/EDGE-Project/blob/main/Edge%20project.ipynb%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mq8FGesCEdDi",
        "outputId": "ef107bce-77e0-4872-bc46-4a2842dfbc04"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Menu:\n",
            "1. Analyze Data\n",
            "2. Filter Failing Students\n",
            "3. Visualize Data\n",
            "4. Add New Student Data\n",
            "5. Save and Exit\n",
            "Enter your choice: 4\n",
            "Enter Student Name: Rajesh\n",
            "Enter Student ID: STU-1001\n",
            "Enter Subject: CSE\n",
            "Enter Score: 25\n",
            "Enter Attendance Percentage: 100\n",
            "Assignment Completed (Yes/No): Yes\n",
            "\n",
            "Menu:\n",
            "1. Analyze Data\n",
            "2. Filter Failing Students\n",
            "3. Visualize Data\n",
            "4. Add New Student Data\n",
            "5. Save and Exit\n",
            "Enter your choice: 2\n",
            "Enter subject to filter failing students: CSE\n",
            "Failing students in CSE:\n",
            "  Student Name Student ID Subject  Score  Attendance Percentage  \\\n",
            "4       Rajesh   STU-1001     CSE     25                    100   \n",
            "\n",
            "  Assignment Completion  \n",
            "4                   Yes  \n",
            "\n",
            "Menu:\n",
            "1. Analyze Data\n",
            "2. Filter Failing Students\n",
            "3. Visualize Data\n",
            "4. Add New Student Data\n",
            "5. Save and Exit\n",
            "Enter your choice: 5\n",
            "Data saved to student_data.csv\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import re\n",
        "\n",
        "# Data Collection and Storage\n",
        "def create_sample_csv(file_path):\n",
        "    data = {\n",
        "        \"Student Name\": [\"Rajesh\", \"Tanmoy\", \"Minhajul\", \"Rifat\"],\n",
        "        \"Student ID\": [\"STU-1001\", \"STU-1002\", \"STU-1003\", \"STU-1004\"],\n",
        "        \"Subject\": [\"Math\", \"CSE\", \"English\", \"Math\"],\n",
        "        \"Score\": [75, 85, 79, 80],\n",
        "        \"Attendance Percentage\": [88, 70, 92, 60],\n",
        "        \"Assignment Completion\": [\"Yes\", \"No\", \"Yes\", \"No\"],\n",
        "    }\n",
        "    df = pd.DataFrame(data)\n",
        "    df.to_csv(file_path, index=False)\n",
        "    print(f\"Sample data written to {file_path}\")\n",
        "\n",
        "# Basic File Handling\n",
        "def read_csv(file_path):\n",
        "    try:\n",
        "        return pd.read_csv(file_path)\n",
        "    except FileNotFoundError:\n",
        "        print(\"File not found. Please provide a valid file path.\")\n",
        "        return None\n",
        "\n",
        "def write_csv(df, file_path):\n",
        "    df.to_csv(file_path, index=False)\n",
        "    print(f\"Data saved to {file_path}\")\n",
        "\n",
        "# Data Analysis and Manipulation\n",
        "def analyze_data(df):\n",
        "    print(\"Average Scores:\")\n",
        "    print(df.groupby(\"Student Name\")[\"Score\"].mean())\n",
        "    print(\"\\nMinimum and Maximum Scores:\")\n",
        "    print(df.groupby(\"Student Name\")[\"Score\"].agg([\"min\", \"max\"]))\n",
        "\n",
        "    print(\"\\nStudents with attendance < 75% or missing assignments:\")\n",
        "    low_attendance_or_missing = df[(df[\"Attendance Percentage\"] < 75) | (df[\"Assignment Completion\"] == \"No\")]\n",
        "    print(low_attendance_or_missing)\n",
        "\n",
        "def filter_failing_students(df, subject):\n",
        "    failing_students = df[(df[\"Subject\"] == subject) & (df[\"Score\"] < 50)]\n",
        "    print(f\"Failing students in {subject}:\")\n",
        "    print(failing_students)\n",
        "\n",
        "def convert_score_to_int(df):\n",
        "    df[\"Score\"] = df[\"Score\"].astype(int)\n",
        "\n",
        "# Visualization\n",
        "def plot_visualizations(df):\n",
        "    # Bar chart of average scores by subject\n",
        "    avg_scores = df.groupby(\"Subject\")[\"Score\"].mean()\n",
        "    avg_scores.plot(kind=\"bar\", title=\"Average Scores by Subject\", ylabel=\"Score\", xlabel=\"Subject\")\n",
        "    plt.show()\n",
        "\n",
        "    # Pie chart of attendance percentage categories\n",
        "    attendance_categories = pd.cut(df[\"Attendance Percentage\"], bins=[0, 50, 75, 100], labels=[\"<50%\", \"50-75%\", \">75%\"])\n",
        "    attendance_categories.value_counts().plot(kind=\"pie\", title=\"Attendance Categories\", autopct=\"%1.1f%%\")\n",
        "    plt.show()\n",
        "\n",
        "# Functions for Logic\n",
        "def calculate_aggregate_scores(df):\n",
        "    df[\"Aggregate Score\"] = df.groupby(\"Student Name\")[\"Score\"].transform(\"sum\")\n",
        "\n",
        "def determine_grade(score):\n",
        "    if score >= 90:\n",
        "        return \"A\"\n",
        "    elif score >= 75:\n",
        "        return \"B\"\n",
        "    elif score >= 50:\n",
        "        return \"C\"\n",
        "    else:\n",
        "        return \"Fail\"\n",
        "\n",
        "def apply_grades(df):\n",
        "    df[\"Grade\"] = df[\"Score\"].apply(determine_grade)\n",
        "\n",
        "# Interactive Console I/O\n",
        "def add_student_data(df):\n",
        "    name = input(\"Enter Student Name: \")\n",
        "    student_id = input(\"Enter Student ID: \")\n",
        "    if not re.match(r\"STU-\\d{4}\", student_id):\n",
        "        print(\"Invalid ID format. Use STU-XXXX.\")\n",
        "        return df\n",
        "\n",
        "    subject = input(\"Enter Subject: \")\n",
        "    score = int(input(\"Enter Score: \"))\n",
        "    attendance = int(input(\"Enter Attendance Percentage: \"))\n",
        "    assignment = input(\"Assignment Completed (Yes/No): \")\n",
        "\n",
        "    new_data = {\n",
        "        \"Student Name\": name,\n",
        "        \"Student ID\": student_id,\n",
        "        \"Subject\": subject,\n",
        "        \"Score\": score,\n",
        "        \"Attendance Percentage\": attendance,\n",
        "        \"Assignment Completion\": assignment,\n",
        "    }\n",
        "    return df._append(new_data, ignore_index=True)\n",
        "\n",
        "def main():\n",
        "    file_path = \"student_data.csv\"\n",
        "    if not os.path.exists(file_path):\n",
        "        create_sample_csv(file_path)\n",
        "\n",
        "    df = read_csv(file_path)\n",
        "    if df is None:\n",
        "        return\n",
        "\n",
        "    while True:\n",
        "        print(\"\\nMenu:\")\n",
        "        print(\"1. Analyze Data\")\n",
        "        print(\"2. Filter Failing Students\")\n",
        "        print(\"3. Visualize Data\")\n",
        "        print(\"4. Add New Student Data\")\n",
        "        print(\"5. Save and Exit\")\n",
        "        choice = input(\"Enter your choice: \")\n",
        "\n",
        "        if choice == \"1\":\n",
        "            analyze_data(df)\n",
        "        elif choice == \"2\":\n",
        "            subject = input(\"Enter subject to filter failing students: \")\n",
        "            filter_failing_students(df, subject)\n",
        "        elif choice == \"3\":\n",
        "            plot_visualizations(df)\n",
        "        elif choice == \"4\":\n",
        "            df = add_student_data(df)\n",
        "        elif choice == \"5\":\n",
        "            write_csv(df, file_path)\n",
        "            break\n",
        "        else:\n",
        "            print(\"Invalid choice. Please try again.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ]
    }
  ]
}